{"version":3,"sources":["store/action.js","components/header/Header.js","components/search/Search.js","components/main/Main.js","components/tags/Tags.js","components/artistCard/ArtistCard.js","App.js","store/chart.reducer.js","store/singleArtist.reducer.js","store/search.reducer.js","store/song.reducer.js","store/rootReducer.js","store/store.js","index.js"],"names":["GET_CHART","GET_SINGLE_ARTIST","SEARCH_SONG","GET_SEARCH_SONG","getFetch","url","type","dispatch","fetch","then","response","ok","Error","statusText","json","item","topArtist","artistDetails","song","fetchDataSuccess","useStyles","makeStyles","header","display","justifyContent","link","textDecoration","color","input","background","inputWrap","margin","alignItems","btn","marginLeft","mapDispatch","handleSearch","e","text","target","value","connect","state","search","searchValue","classes","AppBar","position","Toolbar","className","Typography","variant","to","pathname","TextField","id","label","defaultValue","onChange","Button","root","overflow","maxWidth","maxHeight","marginTop","wrap","flexWrap","title","songReducer","useEffect","cardWrap","map","Card","CardContent","component","List","ListItem","ListItemAvatar","Avatar","Edit","ListItemText","primary","secondary","artist","name","Math","random","chartList","chartReducer","artists","singleArtist","chart","replace","onClick","handleArtist","EmojiPeople","listeners","CardActions","disableSpacing","size","href","NavigateNext","fontSize","tag","marginRight","Tags","tags","length","RemoveRedEye","App","exact","path","Main","Search","ArtistCard","initialState","rootReducer","combineReducers","action","tracks","track","results","trackmatches","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8bc7352.chunk.js","sourcesContent":["export const GET_CHART = \"GET_CHART\";\nexport const GET_SINGLE_ARTIST = \"GET_SINGLE_ARTIST\";\nexport const SEARCH_SONG = \"SEARCH_SONG\";\nexport const GET_SEARCH_SONG = \"GET_SEARCH_SONG\";\n\nexport function getFetch(url, type) {\n  return (dispatch) => {\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response;\n      })\n      .then((response) => response.json())\n      .then((item) => {\n        return dispatch(fetchDataSuccess(item, type));\n      });\n  };\n}\nexport function fetchDataSuccess(item, type) {\n  if (type === \"GET_CHART\") {\n    return {\n      type: GET_CHART,\n      topArtist: item,\n    };\n  } else if (type === \"GET_SINGLE_ARTIST\") {\n    return {\n      type: GET_SINGLE_ARTIST,\n      artistDetails: item,\n    };\n  } else if (type === \"GET_SEARCH_SONG\") {\n    return {\n      type: GET_SEARCH_SONG,\n      song: item,\n    };\n  }\n}\n\nexport function handleSearch(e) {\n  return {\n    type: SEARCH_SONG,\n    text: e.target.value,\n  };\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { handleSearch } from \"../../store/action\";\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n  input: {\n    background: \"white\",\n  },\n  inputWrap: {\n    margin: \"2%\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  btn: {\n    marginLeft: 10,\n  },\n}));\n\nconst Header = ({ handleSearch, search }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar className={classes.header}>\n        <Typography variant=\"h6\">\n          <Link className={classes.link} to={{ pathname: \"/\" }}>\n            Home\n          </Link>\n        </Typography>\n        <div className={classes.inputWrap}>\n          <TextField\n            className={classes.input}\n            id=\"outlined-basic\"\n            label=\"Search music\"\n            variant=\"outlined\"\n            defaultValue={search}\n            onChange={handleSearch}\n          />\n          <Link\n            to={{\n              pathname: `/search/${search}`,\n            }}\n            className={classes.link}\n          >\n            <Button\n              className={classes.btn}\n              variant=\"contained\"\n              color=\"inherit\"\n              type=\"submit\"\n            >\n              Search\n            </Button>\n          </Link>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst mapDispatch = {\n  handleSearch: handleSearch,\n};\n\nconst mapState = (state) => {\n  return {\n    search: state.searchValue.search,\n  };\n};\nexport default connect(mapState, mapDispatch)(Header);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFetch, GET_SEARCH_SONG } from \"../../store/action\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  List,\n  Avatar,\n  CardContent,\n  Typography,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n} from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: \"auto\",\n    display: \"flex\",\n    overflow: \"visible\",\n    maxWidth: 250,\n    maxHeight: 220,\n    marginTop: \"7%\",\n  },\n  wrap: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: 125,\n  },\n}));\n\nconst Search = ({ search, getFetch, song }) => {\n  const classes = useStyles();\n  useEffect(() => {\n    const url = `http://ws.audioscrobbler.com/2.0/?method=track.search&track=${search}&api_key=a5297112b152bc2e75ee90f207e25d7b&format=json`;\n    getFetch(url, GET_SEARCH_SONG);\n  }, []);\n\n  const cardWrap = song.map((item) => {\n    return (\n      <Card className={classes.root} key={Math.random()}>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            <List>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <Edit />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Artist name\" secondary={item.artist} />\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AudiotrackIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"song\" secondary={item.name} />\n              </ListItem>\n            </List>\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  });\n\n  return (\n    <>\n      <div className={classes.title}>\n        <h2>Your search</h2>\n      </div>\n      <div className={classes.wrap}>{cardWrap}</div>\n    </>\n  );\n};\n\nconst mapDispatch = {\n  getFetch: getFetch,\n};\n\nconst mapState = (state) => {\n  return {\n    search: state.searchValue.search,\n    song: state.songReducer.song,\n  };\n};\nexport default connect(mapState, mapDispatch)(Search);\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  List,\n  Button,\n  Avatar,\n  CardContent,\n  CardActions,\n  Typography,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { getFetch, GET_CHART, GET_SINGLE_ARTIST } from \"../../store/action\";\nimport { EmojiPeople, NavigateNext, Edit } from \"@material-ui/icons\";\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: \"auto\",\n    display: \"flex\",\n    overflow: \"visible\",\n    maxWidth: 250,\n    maxHeight: 330,\n    marginTop: \"7%\",\n  },\n  wrap: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: 125,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"#4791db\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Main = ({ getFetch, chartList }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    const url = `https://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=a5297112b152bc2e75ee90f207e25d7b&format=json`;\n    getFetch(url, GET_CHART);\n  }, []);\n\n  const handleArtist = (id) => {\n    const url = `http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${id}&api_key=a5297112b152bc2e75ee90f207e25d7b&format=json`;\n    getFetch(url, GET_SINGLE_ARTIST);\n  };\n  const cardWrap = chartList.map((item) => {\n    return (\n      <Card className={classes.root} key={Math.random()}>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            <List>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <Edit />\n                  </Avatar>\n                </ListItemAvatar>\n                <Link\n                  className={classes.link}\n                  to={item.artist.name.replace(/\\s/g, \"\")}\n                >\n                  <ListItemText\n                    onClick={() => handleArtist(item.artist.name)}\n                    primary=\"Artist name\"\n                    secondary={item.artist.name}\n                  />\n                </Link>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AudiotrackIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"song\" secondary={item.name} />\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <EmojiPeople />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"listeners\" secondary={item.listeners} />\n              </ListItem>\n              <CardActions disableSpacing>\n                <Button size=\"small\" color=\"primary\">\n                  <a className={classes.link} href={item.url}>\n                    More information\n                    <NavigateNext fontSize=\"large\" />\n                  </a>\n                </Button>\n              </CardActions>\n            </List>\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  });\n\n  return (\n    <div>\n      <div className={classes.title}>\n        <h2>Top song</h2>\n      </div>\n      <div className={classes.wrap}>{cardWrap}</div>\n    </div>\n  );\n};\nconst mapDispatch = {\n  getFetch: getFetch,\n};\n\nconst mapState = (state) => {\n  return {\n    chartList: state.chartReducer.artists,\n    singleArtist: state.chart,\n  };\n};\nexport default connect(mapState, mapDispatch)(Main);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  tag: {\n    marginRight: 10,\n  },\n}));\n\nconst Tags = ({ tags }) => {\n  const classes = useStyles();\n\n  const tag = tags.tag.map((item) => (\n    <span className={classes.tag} key={item.name}>{`#${item.name}`}</span>\n  ));\n  return <span>{tag}</span>;\n};\n\nexport default Tags;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  List,\n  Button,\n  Avatar,\n  CardContent,\n  CardActions,\n  Typography,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n} from \"@material-ui/core\";\nimport {\n  RemoveRedEye,\n  NavigateNext,\n  Edit,\n} from \"@material-ui/icons\";\nimport {Link} from 'react-router-dom'\nimport Tags from \"../tags/Tags\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    maxWidth: \"60%\",\n    margin: \"auto\",\n    marginTop: \"20%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    overflow: \"visible\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"#4791db\",\n    display: \"flex\",\n    alignItems: \"center\",\n  }\n}));\n\nconst ArtistCard = ({ singleArtist }) => {\n  const classes = useStyles();\n  if (singleArtist.length === 0) {\n    return null;\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n          <List>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <Edit />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"Artist name\"\n                secondary={singleArtist.name}\n              />\n            </ListItem>\n\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <RemoveRedEye />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"Artist tags\"\n                secondary={<Tags tags={singleArtist.tags} />}\n              />\n            </ListItem>\n            <CardActions disableSpacing>\n              <Link className={classes.link} to=\"/\">\n                <Button\n                  // onClick={onNextItem}\n                  size=\"small\"\n                  color=\"primary\"\n                >\n                  <NavigateNext fontSize=\"large\" />\n                  Back to chart\n                </Button>\n              </Link>\n            </CardActions>\n          </List>\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst mapState = (state) => {\n  return {\n    singleArtist: state.singleArtist.singleArtist,\n  };\n};\nexport default connect(mapState, null)(ArtistCard);\n","import React from \"react\";\nimport Header from \"./components/header/Header\";\nimport Search from \"./components/search/Search\";\nimport Main from \"./components/main/Main\";\nimport ArtistCard from \"./components/artistCard/ArtistCard\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/search/:id\" component={Search} />\n        <Route path=\"/:id\" component={ArtistCard} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { GET_CHART } from \"./action\";\n\nconst initialState = {\n  artists: [],\n};\n\nexport function chartReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_CHART: {\n      return {\n        ...state,\n        artists: action.topArtist.tracks.track,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { GET_SINGLE_ARTIST } from \"./action\";\n\nconst initialState = {\n  singleArtist: [],\n};\n\nexport function singleArtist(state = initialState, action) {\n  switch (action.type) {\n    case GET_SINGLE_ARTIST: {\n      return {\n        ...state,\n        singleArtist: action.artistDetails.artist,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { SEARCH_SONG } from \"./action\";\n\nconst initialState = {\n  search: [],\n};\n\nexport function searchValue(state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_SONG: {\n      return {\n        ...state,\n        search: action.text,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { GET_SEARCH_SONG } from \"./action\";\n\nconst initialState = {\n  song: [],\n};\n\nexport function songReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_SEARCH_SONG: {\n      return {\n        ...state,\n        song: action.song.results.trackmatches.track,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport { chartReducer } from \"./chart.reducer\";\nimport { singleArtist } from \"./singleArtist.reducer\";\nimport {searchValue} from './search.reducer'\nimport {songReducer} from './song.reducer'\n\nconst rootReducer = combineReducers({\n  chartReducer,\n  singleArtist,\n  searchValue,\n  songReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from './store/store'\nimport { Provider } from \"react-redux\"; \n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}